1.7rc1 (pleprince)
* Largely rewrote Fluid. It's an order of magnitude faster now.
  o New shader and lif file parsing 10-100x faster.
  o New shader editing window code : much faster too.
  o Improved error checking in shader and lif parsing.
  o Shader parameters can be arbitrarily re-ordered in the editing window.
  o Better support for arrays in shaders.
    + Supported :
      # Float arrays
      # Color arrays
      # Vector / Normal / Point arrays
      # String arrays
    + Unsupported
      # Matrices arrays.
      # no dynamic arrays support yet.
* Container Nodes
  o Bringing shader organisation functionalities to liquid
  o You can create as many containers as you want to organise your shaders.
  o containers are only internal for the time being.
  o read/write lcf (liquid container file) files describing their content.
  o added a rib box node
* Automatic dutch (rotated) camera generation
  o Crop Window settings are still consistent after the camera has been rotated
* feat  : Delayed read archives : if no bbox supplied, a bbox will be computed based on the current primitive.
* feat  : Delayed read archives : added an attribute to grow/shrink the bounding box.
* feat  : graphic render crop GUI in RenderGlobals. the crop window is visible through the camera.
* feat  : added raytracing control options output.
* feat  : added new visibility/ray-tracing attributes support in prman 12.5+.
* feat  : added raytracing hit-modes support in prman 12.5+.
* feat  : added matte support.
* feat  : added irradiance attributes support.
* feat  : added a template for shader nodes.
* feat  : corrected an global initialization problem in mel startup.
* feat  : added coordsys browser
* feat  : added a texture viewer field in the globals. right-click in a fluid tex field allows you to display the texture with the utility of your choice.
* feat  : you can pass a qualified path to liquidLoadGlobals
* fixed :  RiCurves export.
* fixed : liqMaxDiffuseDepth and liqMaxSpecularDepth were defined as float, although they should be ints.
* fixed : rib attributes are now correctly exported.
* fixed : substitution is working again
  o feat  : added $OBJ and $OBJPATH to substitution
  o feat  : added $SHOT and $VER to substitution
o fixed : the ribbox node is not connected correctly
o fixed : the name field of the param window does not display the real shader name.
o feat  : make the camera name in the beauty rib file optional
o feat  : add liqIgnoreShapes boolean attribute per node. when on, only the transform is exported.
o feat  : string array support
o fixed : search paths work correctly with relatives paths on.
o fixed : search paths can be overriden on the command line.
o feat  : explicit message to stderr if we get a bad path
o feat  : command line help : all the flags are now displayed
o feat  : added a shotName and shotVersion string attr to the globals. they are only there to be substituted in pipeliny stuff.
o fixed : container swatch refresh


1.6.7 (on sourceforge again!)

- Fixed shader preview for Linux platform (untested on OS X!)
- Linux installer script now automatically compiles the Liquid shaders for all
    installed renderers
- Added new global to allow separate control for camera motion blur
- UI improvements for all file browser dialogs (including Fluid's browser)
    thanks to Alexandre Paes
- Fixed a bug that led to attributes not being recorded properly for RIB output
- Fix to Subdivision UI


1.6.6 (not on sourceforge):

- Support for creases/corners/holes on subdivison meshes including a nice
    Subdivision Surface Inspector panel    
- Support for arbitrary renderer configurations in the Liquid Render Globals
- Support for rendering dependent files w/o the need to use a Job Script
    anymore (e.g. shadow passes)
- Several different Liquid plug-ins can now be installed on the same machine
- Added support for certain ray tracing attributes on lights    
- RIB & display filename from the Liquid Render Globals is handled more
    logical now (hopefully):
    - The scene's name is used as the display name if the latter was omitted
    - The display name is never used as the RIB basename
    - The RIB basename is used as the display name if the latter was omitted
    - The scene's name is used as the RIB basename if the latter was omitted    
- Pathnames are now santized everywhere in the RIB
- Fixed a bug that caused motion blur to be switched off randomly
    (Thx for reporting & providing a Maya scene exposing it go to Christopher)


1.6.5 (not on sourceforge):

- New code for correct handling of particle motion blur
- Fixed a bad memory handling bug that led to crashes with the improved
    uv code on subdivs and polygon-/subdivision meshes
- RIB size improvements (smaller RIBs):
    - Liquid now uses RIB inline parameter declarations only
    - Support of 3Delight's more compact "sphere"-type RiPoint particles
- RIB Attribute support through a new 'Attributes' pop-up in the Liquid menu
    and a new 'Liquid' roll-out in Maya's Attribute Editor
- Trace set membership support through a new 'Set Attributes' pop-up in the
    Liquid menu and a new 'Liquid' roll-out for objectSets in Maya's Attribute
    Editor
- Buffed up Maya lights support. Point-, distant- and spotlights now use a
    liquid* variant of the resp. shader. Most Maya light attributes are handled
    as a user would expect (particularly Decay)
- New Liquid global 'Shutter Config'. Allows to choose if the shutter opens on
    frame, is centered on frame, is centered between frames or closes on the
    next frame (do I hear someone bitch about not enough shutter
    configurations? ;>)
- Lights too can now have ray tracing attributes attached through the Light
    menu


1.6.4 (not on sourceforge):

- Added new Liquid global "Output Mesh UVs" to control writing of redundant uv
    data to RIBs
- Fixed uv code for Maya subdivision surfaces
- Switched uv interpolation scheme for 3Delight from "facevarying" to
    "facevertex" -- this should solve all uv warping/interpolation problems on
    subdivison surfaces
- Added default behaviour for undefined shader searchpath and added default
    shader searchpath to the searchpath written to the RIB
    

1.6.3 (not on sourceforge):

- Added new options to and buffed up Liquid's shader preview
- Moved Fluid options to their own tab in the Liquid Render Globals
- Minor bugfixes in Liquid's curve code
- Added code to support curves in 3Delight


1.6.2 (not on sourceforge):

- Liquid now automatically substitutes backslashes on Windows in Fluid's file
    chooser dialog
- New sprite particle support
- Pixie support
- OSX support
- Added new Liquid global to control output of shaders in deep shadow passes
- Fixed initialization and cleanup code to account for more than five motion
    samples


1.6.1-5 (not on sourceforge):

- Deactivated the code in liquidReAttachParams.mel that led to flushing of
    string paramater values on shader reload in Fluid
- Fixed Maya Subdivision Surface code -- Maya subdivs now work, including
    Maya's creasing system. Hardness is ignored, this is a limitation of the
    Maya API. Creased edges and vertices are written with a hardness of 6.0 now
      -- this gives a nice, subtle bevel and ensures that surfaces are still
      tangent continous at creases


1.6.1-4 (not on sourceforge):

- light linking is no longer (erratically) written out in a shadow pass
- lights and light linking can now be written out in a deep shadow pass if the
    "Output Lightsources" in the "Deep Shadow Maps" rollout of the Liquid
    Render Globals is checked
- added full support (and new Liquid global) for relative pathnames;
    RIBs, archives, the job script etc. now all contain relative pathnames if
    this option is switched on
- added command line support for rendering sequences to the dojob.py Python
    script


1.6.1-3 (not on sourceforge):

- Fixed uninitialized string array bug with blobbies; blobbies code activated
    -- blobbies now actually work
- Fixed Motion Samples glitch; now the maximum number of motion samples is 16
- Added quotes to render script filename in win32 build
- Added binary RIB output support for 3Delight
- Added deep shadow support for 3Delight's "dsm" driver
- Changed Opacity to be a color instead of a float


1.6.1-2 (not on sourceforge):

- Fixed __Pref bug with subdiv-/polygon meshes; __Pref was not initialized
    correctly and hence never got written out correctly to the RIB
- Interpolate Boundary on subdivs works now
- Fixed shader preview in Fluid


1.6.1 (not on sourceforge):

- Displacement bounds are now explicitly specified in "shader" space;
    there's no way to currently change this; maybe add another Liquid global?
- Added new Liquid global: compiledShaderExt; can be set to e.g. "sdl" for
    3Delight or "slo" for PRMan
- Liquid now writes out all coordinate systems after the lights but before any
    other stuff in the RIB; previously coordinate systems where written out
    scattered between the other geometry according to the order in the Maya
    Outliner
- If a Maya light has raytraced shadows switched on,
    Attribute "light" "string shadows" [ "on" ]
    is now written to the RIB regardless of BMRT being used or not
- New attribute liqInvisible; works as mtorInvisible -- tagged objects are
    ignored by Liquid


1.6:

- Maya 6.0 build
- Maya OSX build
- XML format render script output
- View last RIB/render-script fixed for win32
- Shadow map (including deep shadows) fixes
- Other stuff


1.5.6 (not on sourceforge):

- Added quotes to all filenames for win32. Now pathnames with spaces will work
    in bloody Windoze
- new Liquid global: preGeom; the contents of this string is written to the RIB
    after lights and coordinate systems, but before geometry
- Liquid now understands the mtorSubdiv attribute
- /Considerably/ buffed up resp. changed the entire MEL interface;
    changed naming to be more MtoR compatible: added separators and ellipses,
    reordered menus where appropriate and added support for file browser
    dialogs to Fluid string input fields
- Removed BMRT tab and options from MEL interface as they are obsolete and
    should be replaced by a new set of raytrace options as e.g. in MtoR
- Fixed 3Delight settings in liqDelightRenderer.cpp (almost all where wrong)
- Aghiles Kheffache: VC++ project settings to compile Liquid with 3Delight


1.5.5:

- Polygon mesh export overhaul for efficiency and facevarying UVs on subdivs
- Crasher bug in Fluid shader editor fixed
- Many other fixes from the last few months


1.5.2:

- Initial release cleaned up with some minor fixes.


1.0:

- Initial release of the source code for the Liquid Rendering Toolkit

