//
//
// The contents of this file are subject to the Mozilla Public License Version 1.1 (the 
// "License"); you may not use this file except in compliance with the License. You may 
// obtain a copy of the License at http://www.mozilla.org/MPL/ 
// 
// Software distributed under the License is distributed on an "AS IS" basis, WITHOUT 
// WARRANTY OF ANY KIND, either express or implied. See the License for the specific 
// language governing rights and limitations under the License. 
//
// The Original Code is the Liquid Rendering Toolkit. 
// 
// The Initial Developer of the Original Code is Colin Doncaster. Portions created by 
// Colin Doncaster are Copyright (C) 2002. All Rights Reserved. 
// 
// Contributor(s): Alf Kraus. 
//
// 
// The RenderMan (R) Interface Procedures and Protocol are:
// Copyright 1988, 1989, Pixar
// All Rights Reserved
//
//
// RenderMan (R) is a registered trademark of Pixar
//
//  Creation Date:    January 18th, 2001
//
//  Description:
//  An interface for working with Renderable Curves with Liquid
//

global proc liquidAddPFXAttributes()
{
	string $list[] = `ls -dag -type "stroke" -sl`;
	for( $s in $list )
	{
		if( !attributeExists( "liquidTubeShadingGroup", $s ) )
			addAttr -ln liquidTubeShadingGroup -at "message" $s;
		if( !attributeExists( "liquidLeafShadingGroup", $s ) )
			addAttr -ln liquidLeafShadingGroup -at "message" $s;
		if( !attributeExists( "liquidPetalShadingGroup", $s ) )
			addAttr -ln liquidPetalShadingGroup -at "message" $s;
			
		if( !attributeExists( "liquidTubeCameraFacing", $s ) )
			addAttr -ln liquidTubeCameraFacing -at bool -dv true $s;
		if( !attributeExists( "liquidLeafCameraFacing", $s ) )
			addAttr -ln liquidLeafCameraFacing -at bool -dv false $s;
		if( !attributeExists( "liquidPetalCameraFacing", $s ) )
			addAttr -ln liquidPetalCameraFacing -at bool -dv false $s;
			
		if( !attributeExists( "liquidTubeUniformWidth", $s ) )
			addAttr -ln liquidTubeUniformWidth -at bool -dv false $s;
		if( !attributeExists( "liquidLeafUniformWidth", $s ) )
			addAttr -ln liquidLeafUniformWidth -at bool -dv false $s;
		if( !attributeExists( "liquidPetalUniformWidth", $s ) )
			addAttr -ln liquidPetalUniformWidth -at bool -dv false $s;

		if( !attributeExists( "liquidCurveID", $s ) )
			addAttr -ln liquidCurveID -at bool -dv false $s;
	}
}

global proc liquidRemovePFXAttributes()
{
	string $list[] = `ls -dag -type "stroke" -sl`;
	for( $s in $list )
	{
		if( attributeExists( "liquidTubeShadingGroup", $s ) )
			deleteAttr -at liquidTubeShadingGroup $s;
		if( attributeExists( "liquidLeafShadingGroup", $s ) )
			deleteAttr -at liquidLeafShadingGroup $s;
		if( attributeExists( "liquidPetalShadingGroup", $s ) )
			deleteAttr -at liquidPetalShadingGroup $s;
			
		if( attributeExists( "liquidTubeCameraFacing", $s ) )
			deleteAttr -at liquidTubeCameraFacing $s;
		if( attributeExists( "liquidLeafCameraFacing", $s ) )
			deleteAttr -at liquidLeafCameraFacing $s;
		if( attributeExists( "liquidPetalCameraFacing", $s ) )
			deleteAttr -at liquidPetalCameraFacing $s;
			
		if( attributeExists( "liquidTubeUniformWidth", $s ) )
			deleteAttr -at liquidTubeUniformWidth $s;
		if( attributeExists( "liquidLeafUniformWidth", $s ) )
			deleteAttr -at liquidLeafUniformWidth $s;
		if( attributeExists( "liquidPetalUniformWidth", $s ) )
			deleteAttr -at liquidPetalUniformWidth $s;

		if( attributeExists( "liquidCurveID", $s ) )
			deleteAttr -at liquidCurveID $s;
	}
}

