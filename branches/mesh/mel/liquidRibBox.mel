//
//
// The contents of this file are subject to the Mozilla Public License Version 1.1 (the
// "License"); you may not use this file except in compliance with the License. You may
// obtain a copy of the License at http://www.mozilla.org/MPL/
//
// Software distributed under the License is distributed on an "AS IS" basis, WITHOUT
// WARRANTY OF ANY KIND, either express or implied. See the License for the specific
// language governing rights and limitations under the License.
//
// The Original Code is the Liquid Rendering Toolkit.
//
// The Initial Developer of the Original Code is Colin Doncaster. Portions created by
// Colin Doncaster are Copyright (C) 2002. All Rights Reserved.
//
// Contributor(s): Berj Bannayan.
//
//
// The RenderMan (R) Interface Procedures and Protocol are:
// Copyright 1988, 1989, Pixar
// All Rights Reserved
//
//
// RenderMan (R) is a registered trademark of Pixar

//
//  Creation Date:  June 30, 2000
//
//
//  Description:
//      Liquids main startup interface.
//
//  Input Arguments:
//
//  Returns:
//

// create the liquid menu interface
global proc liquidAddRibBox ()
{
  // Was ls -dag -sl
  // should be at least ls -dag -tr -sl to not add stuff to the shapes
  // in my opinion should be just ls -tr -sl. Stephane
  string $nodes[] = `ls -tr -sl`;
  string $currentNode;
  for ( $currentNode in $nodes ) 
    if ( !`attributeQuery -node $currentNode -ex "liqRIBBox"` ) 
      addAttr -ln "liqRIBBox" -dt "string" $currentNode;
}

global proc liquidDeleteRibBox ()
{
  // Do we really want to delete the 
  // atributes recursively ?
  string $nodes[] = `ls -dag -sl`;
  string $currentNode;
  for ( $currentNode in $nodes ) 
    if ( `attributeQuery -node $currentNode -ex "liqRIBBox"` ) 
      deleteAttr ( $currentNode + ".liqRIBBox" );
}

//// This is very bad! It overrides existing attached ribbox info!!!
//global proc liquidMakeMatteObjects ()
//{
//  string $nodes[] = `ls -dag -sl`;
//  string $currentNode;
//  for ( $currentNode in $nodes ) {
//    if ( !`attributeQuery -node $currentNode -ex "liqRIBBox"` ) {
//      addAttr -ln "liqRIBBox" -dt "string" $currentNode;
//    }
//    setAttr -type "string" ( $currentNode + ".liqRIBBox" ) "Matte 1";
//  }
//}
//
//global proc liquidUnMakeMatteObjects ()
//{
//  string $nodes[] = `ls -dag -sl`;
//  string $currentNode;
//  for ( $currentNode in $nodes ) {
//    if ( `attributeQuery -node $currentNode -ex "liqRIBBox"` ) {
//      deleteAttr ( $currentNode + ".liqRIBBox" );
//    }
//  }
//}
